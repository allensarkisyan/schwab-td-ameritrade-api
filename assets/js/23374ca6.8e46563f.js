"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[421],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(a),m=r,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return a?n.createElement(h,l(l({ref:t},c),{},{components:a})):n.createElement(h,l({ref:t},c))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},6527:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const i={slug:"/"},l="README",o={unversionedId:"README",id:"README",title:"README",description:"npm (scoped)",source:"@site/docs/README.md",sourceDirName:".",slug:"/",permalink:"/schwab-td-ameritrade-api/",draft:!1,tags:[],version:"current",frontMatter:{slug:"/"},sidebar:"sidebar",next:{title:"LICENSE",permalink:"/schwab-td-ameritrade-api/LICENSE"}},s={},p=[{value:"Overview",id:"overview",level:2},{value:"WebSocket client / streaming functionality available with @allensarkisyan/schwab-td-ameritrade-streamer",id:"websocket-client--streaming-functionality-available-with-allensarkisyanschwab-td-ameritrade-streamer",level:3},{value:"Features",id:"features",level:2},{value:"Installation",id:"installation",level:2},{value:"Required Configuration Options / Environment Variables",id:"required-configuration-options--environment-variables",level:2},{value:"Import Module",id:"import-module",level:2},{value:"API Client Initialization",id:"api-client-initialization",level:2},{value:"createTDAmeritradeAPIClient Factory",id:"createtdameritradeapiclient-factory",level:4},{value:"Authentication &amp; Authorization",id:"authentication--authorization",level:2},{value:"Setting Access Token Externally",id:"setting-access-token-externally",level:2},{value:"Available APIs",id:"available-apis",level:2},{value:"License",id:"license",level:2},{value:"Contributing",id:"contributing",level:2},{value:"Author",id:"author",level:2}],c={toc:p},d="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"readme"},"README"),(0,r.kt)("h1",{id:"javascript--typescript-td-ameritrade-api-client-implementation"},"JavaScript / TypeScript TD Ameritrade API Client Implementation"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://npmjs.com/@allensarkisyan/schwab-td-ameritrade-api"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/npm/v/@allensarkisyan/schwab-td-ameritrade-api",alt:"npm (scoped)"})),"\n",(0,r.kt)("a",{parentName:"p",href:"/schwab-td-ameritrade-api/LICENSE"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/License-MIT-yellow.svg",alt:"License: MIT"})),"\n",(0,r.kt)("img",{parentName:"p",src:"https://img.shields.io/github/last-commit/allensarkisyan/schwab-td-ameritrade-api",alt:"Last Commit"})),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"This is an unofficial JavaScript/TypeScript client implementation for the Charles Schwab / TD Ameritrade API. It allows developers to interact with TD Ameritrade's services and access financial data programmatically. Please note that this implementation is not affiliated with or endorsed by Charles Schwab and/or TD Ameritrade."),(0,r.kt)("h3",{id:"websocket-client--streaming-functionality-available-with-allensarkisyanschwab-td-ameritrade-streamer"},"WebSocket client / streaming functionality available with ",(0,r.kt)("a",{parentName:"h3",href:"https://github.com/allensarkisyan/schwab-td-ameritrade-streamer"},"@allensarkisyan/schwab-td-ameritrade-streamer")),(0,r.kt)("h2",{id:"features"},"Features"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MIT Licensed: This project is fully open source and available under the MIT License."),(0,r.kt)("li",{parentName:"ul"},"Cross-Platform: It is designed to work in both Node.js and Browser environments."),(0,r.kt)("li",{parentName:"ul"},"Strongly Typed: The codebase is strongly typed using JSDoc annotations for enhanced code quality and autocompletion support in TypeScript."),(0,r.kt)("li",{parentName:"ul"},"Uses Zod: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/colinhacks/zod"},"Zod")," (for type safety / schema validation)"),(0,r.kt)("li",{parentName:"ul"},"Implementation of Official API Endpoints: ",(0,r.kt)("a",{parentName:"li",href:"https://developer.tdameritrade.com/apis"},"Official TD Ameritrade API Documentation")),(0,r.kt)("li",{parentName:"ul"},"Derived from proprietary & internally developed quantitative trading and research software.")),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"To install and use this TD Ameritrade API client, you can add it to your project using npm or yarn:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @allensarkisyan/schwab-td-ameritrade-api\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @allensarkisyan/schwab-td-ameritrade-api\n")),(0,r.kt)("h1",{id:"getting-started"},"Getting Started"),(0,r.kt)("p",null,"To get started with this library, follow the documentation provided ",(0,r.kt)("a",{parentName:"p",href:"https://allensarkisyan.github.io/schwab-td-ameritrade-api/getting-started"},"here")," for detailed instructions on how to set up and use the client to access TD Ameritrade's API."),(0,r.kt)("h1",{id:"see-examples"},"See ",(0,r.kt)("a",{parentName:"h1",href:"https://allensarkisyan.github.io/schwab-td-ameritrade-api/EXAMPLES"},"Examples")),(0,r.kt)("h2",{id:"required-configuration-options--environment-variables"},"Required Configuration Options / Environment Variables"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Environment Variable"),(0,r.kt)("th",{parentName:"tr",align:null},"Option Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TD_AMERITRADE_CLIENT_ID"),(0,r.kt)("td",{parentName:"tr",align:null},"clientId"),(0,r.kt)("td",{parentName:"tr",align:null},"YOUR_TD_AMERITRADE_APPLICATION_CLIENT_ID")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TD_AMERITRADE_CALLBACK_URL"),(0,r.kt)("td",{parentName:"tr",align:null},"callbackUrl"),(0,r.kt)("td",{parentName:"tr",align:null},"http://localhost:3000/tdcallback")))),(0,r.kt)("h2",{id:"import-module"},"Import Module"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"/** Using ECMAScript Modules */\nimport { TDAmeritradeAPI } from '@allensarkisyan/schwab-td-ameritrade-api';\n\n/** Using CommonJS */\nconst { TDAmeritradeAPI } = require('@allensarkisyan/schwab-td-ameritrade-api');\n")),(0,r.kt)("h2",{id:"api-client-initialization"},"API Client Initialization"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"/** Create a new instance of TDAmeritradeAPI */\nconst tdApi = new TDAmeritradeAPI({\n  clientId: process.env.TD_AMERITRADE_CLIENT_ID,\n  callbackUrl: process.env.TD_AMERITRADE_CALLBACK_URL\n});\n")),(0,r.kt)("h4",{id:"createtdameritradeapiclient-factory"},"createTDAmeritradeAPIClient Factory"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { createTDAmeritradeAPIClient } from '@allensarkisyan/schwab-td-ameritrade-api';\n\nconst tdApi = createTDAmeritradeAPIClient({\n  clientId: process.env.TD_AMERITRADE_CLIENT_ID,\n  callbackUrl: process.env.TD_AMERITRADE_CALLBACK_URL\n});\n")),(0,r.kt)("h2",{id:"authentication--authorization"},"Authentication & Authorization"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// Step 1: Initiate Authentication request with TD Ameritrade's servers\n// Follow the instructions provided by Charles Schwab / TD Ameritrade.\n\n// Step 2: Get Authorization Response code from the query string to your redirect callback URL.\nconst searchParams = new URLSearchParams(window.location.search);\nconst authorizationResponseCode = searchParams.get('code');\n\n// Step 3: Authorize the API Client and retrieve an Access Token\nconst { data: authResponse } = await tdApi.authenticate(authorizationResponseCode);\n")),(0,r.kt)("h2",{id:"setting-access-token-externally"},"Setting Access Token Externally"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const USER_ACCESS_TOKEN = authResponse?.access_token;\nconst REFRESH_TOKEN = authResponse?.refresh_token;\n\n// Set User Access Token externally \ntdApi.setUserAccessToken({\n  userAccessToken: USER_ACCESS_TOKEN,\n  accessTokenExpires: authResponse?.expires_in,\n  refreshToken: REFRESH_TOKEN,\n  refreshTokenExpires: authResponse?.refresh_token_expires_in,\n});\n")),(0,r.kt)("mermaid",{value:"sequenceDiagram\n    User->> Client Application: Initiate Authentication Request\n    Client Application--xTD Ameritrade: Authenticate with Credentials\n    TD Ameritrade--xClient Application: Responds with Authorization Code\n    %% Client Application--xUser: Success\n    Client Application--\x3e>TD Ameritrade: Initiate API Authorization and Get Access Token\n    TD Ameritrade->>Client Application: Responds with Access Token\n    loop Loop Every 30 Minutes\n        Client Application--\x3eClient Application: Check Access Token Status with TD Ameritrade...\n        alt is Access Token Valid\n            Client Application->>TD Ameritrade: Use Access Token\n        else is Access Token Expired\n            Client Application->>TD Ameritrade: Refresh Access Token\n        end\n    end\n    User->>TD Ameritrade: Make API Requests"}),(0,r.kt)("h2",{id:"available-apis"},"Available APIs"),(0,r.kt)("p",null,"NONE: \u274c"),(0,r.kt)("p",null,"PARTIAL: \ud83d\udd33"),(0,r.kt)("p",null,"FULL: \u2714\ufe0f"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"APIs"),(0,r.kt)("th",{parentName:"tr",align:null},"AVAILABLE"),(0,r.kt)("th",{parentName:"tr",align:null},"IMPLEMENTATION"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Accounts & Trading"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2714\ufe0f"),(0,r.kt)("td",{parentName:"tr",align:null},"\ud83d\udd33")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Authentication"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2714\ufe0f"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2714\ufe0f")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Instruments"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2714\ufe0f"),(0,r.kt)("td",{parentName:"tr",align:null},"\ud83d\udd33")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Market Hours"),(0,r.kt)("td",{parentName:"tr",align:null},"\u274c"),(0,r.kt)("td",{parentName:"tr",align:null},"\u274c")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Movers"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2714\ufe0f"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2714\ufe0f")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Option Chains"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2714\ufe0f"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2714\ufe0f")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Price History"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2714\ufe0f"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2714\ufe0f")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Quotes"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2714\ufe0f"),(0,r.kt)("td",{parentName:"tr",align:null},"\ud83d\udd33")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Transaction History"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2714\ufe0f"),(0,r.kt)("td",{parentName:"tr",align:null},"\ud83d\udd33")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"User Info & Preferences"),(0,r.kt)("td",{parentName:"tr",align:null},"\u274c"),(0,r.kt)("td",{parentName:"tr",align:null},"\ud83d\udd33")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Watchlist"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2714\ufe0f"),(0,r.kt)("td",{parentName:"tr",align:null},"\ud83d\udd33")))),(0,r.kt)("h2",{id:"license"},"License"),(0,r.kt)("p",null,"This project is licensed under the MIT License - see the ",(0,r.kt)("a",{parentName:"p",href:"/schwab-td-ameritrade-api/LICENSE"},"LICENSE")," file for details."),(0,r.kt)("p",null,"MIT License"),(0,r.kt)("p",null,"Copyright (c) 2023 Allen Sarkisyan"),(0,r.kt)("p",null,'Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:'),(0,r.kt)("p",null,"The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software."),(0,r.kt)("p",null,'THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.'),(0,r.kt)("h2",{id:"contributing"},"Contributing"),(0,r.kt)("p",null,"Contributions are welcome! If you have suggestions, bug reports, or would like to contribute to this project,\nplease open an issue or submit a pull request."),(0,r.kt)("h2",{id:"author"},"Author"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/allensarkisyan"},"Allen Sarkisyan")),(0,r.kt)("p",null,"Copyright (c) 2019 - 2023 Allen Sarkisyan. XT-TX. All Rights Reserved."))}u.isMDXComponent=!0}}]);